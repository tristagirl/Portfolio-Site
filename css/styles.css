/*
Colors used

Text Color (Dark Slate Gray): #2F4F4F;
Primary Color (Alice Blue): #F0F8FF;
Secondary Color (Black): #000000;
 */

:root {
  --primary-color: #357b70;
  --secondary-color: #e0b354;
  --background-color:  #2b2b2b;
  --link-color: #808080;
  --link-color-visited: #D3D3D3;
}
a {
  color: var(--primary-color);
}
 * {
    box-sizing: border-box;
  }


@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr  !important;
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}
@media all and (min-width: 500px) and (max-width: 750px){
  .grid {
    grid-template-columns: 1fr 1fr !important;
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

  body {
  font-family: 'Verdana', sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.5;
  color: var(--primary-color);
  background-color: var(--background-color);
  padding: 10px;
  margin: 10px;
    }

h1 {
  font-size: 22px;
  text-align: center;
  font-weight: 700;
  line-height: 2;
}

h2 {
    font-size: 22px;
    font-weight: 700;
  }
  
  h3 {
    font-size: 18px;
    font-weight: 700;
  }

  h4 {
    font-size: 18px;
    font-weight: 700;
  }
  
  h5 {
    font-size: 16px;
    font-weight: 700;
  }
  ul {
      list-style: none;
  }

  a {
    font-size: 20px;
    font-weight: bold;
    color: var(--primary-color);

  }

  a:visited {
      color: var(--link-color-visited: #D3D3D3);
  }

a{
  font-size: 18px;
  color: #2F4F4F;
}

a:hover, a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}
a:visited {
  /* visited link */
  color: #D3D3D3;
}

a:active {
  /* selected link */
  color: var(--link-color: #808080);
}
button:hover, button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}
button,
.button1,
.button2,
.button3,
.my-input{
}
.button, button {
  /* overwrites browser defaults */
  /* resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* style button */
  background-color: #357b70;
  color: white;
  text-decoration: none;
  padding: 10px;
  border-radius: 3px;
  /* width of the border, type, color */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition: 0.2s opacity;
}
button:hover,
button:focus,
.button:hover,
.button:focus {
  /* lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}

td, th{
  padding: 12px;
  margin:  12px;
}
.personalLogo{
    height: 50px;
    width: auto;
}

.flexContainer {
    display: flex;
    flex-direction: row;
}
ul.flexContainer{
    justify-content: right;
}

.flexItem {
    flex: 0 1 50px;
}
nav.flexItem{
    flex: 1 1 60px;
}
li.flexItem {
    flex: 0 1 90px;
}

#personalPhoto {
    border: 75%;
    float: left;
    width: 150px;
    margin-right: 50px;
}
@keyframes color-change {
  from {
    fill: #edc655;
  }
  50% {
    fill: #f76414;
  }
  100% {
    fill:  #f76414;
  }
}
.berlin-illustration{
  fill: black;
}
.grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  gap: 10px;
  grid-auto-rows: minmax(100px, auto);
}
.grid_item {
  background-color: #D3D3D3;
  color:  black;
  padding:  10px;
}
.grid_item:last-child {
   grid-column-start:  1;
   grid-column-end: 4;
   grid-row-start: 1;
   grid-row-end: 4;
}
.gridItem:last-child>h3, .gridItem:last-child>p {
      padding-top: 30px;
  }
  .footerGrid{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-gap: 10px;
    justify-content: center;
    align-content: center;
    text-align: center;
    margin: 20px;
}

.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move {
  from {
    transform: translate(0, 100px);
  }
  to {
    transform: translate(200px, 100px);
  }
}

.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(500px, 50px);
  }
  to {
    transform: translate(100px, 50px);
  }
}
.cloud-back {
  animation: 30s cloud-move-reverse infinite alternate linear;
}

